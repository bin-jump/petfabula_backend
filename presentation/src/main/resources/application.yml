server:
  port : 8080
  servlet:
    session:
      timeout: 90d

app:
  authentication:
    webRedirect: ${AUTH_MOBILE_REDIRECT}
    mobileRedirect: ${AUTH_MOBILE_REDIRECT}
  oauth:
    redirectUrl: ${OAUTH_REDIRECT_URL}
    google:
      clientId: ${OAUTH_GOOGLE_CLIENTID}
      clientSerect: ${OAUTH_GOOGLE_SERECT}

  cors:
    allowedOrigins: ${ALLOWED_ORIGINS}

spring:
  application:
    name: petfabula

  profiles:
    active: dev

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 30MB
      enabled: true
  server:
    tomcat:
      max-http-post-size: 10MB
      max-swallow-size: 30MB

  session:
    store-type: redis

  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    hikari:
      auto-commit: true
      minimum-idle: 2
      idle-timeout: 60000
      connection-timeout: 30000
      max-lifetime: 1800000
      pool-name: DatebookHikariCP
      maximum-pool-size: 5

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false

  redis:
    database: 0
    host: ${REDIS_HOST}
    port: 6379
    timeout: 60000

  data:
    elasticsearch:
      cluster-name: elasticsearch
      host: ${ES_HOST}
      port: 9300
      restport: 9200
      username: ${ES_USERNAME}
      password: ${ES_PASSWORD}

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          quitwait: false
          auth: true
          starttls:
            enable: true
          ssl:
            trust: ${MAIL_HOST}

  cache:
    cache-names:
      - rate-limit-buckets
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s

upload:
  imageUrl: ${UPLOAD_URL}

image:
  contentUrl: ${IMAGE_URL_PREFIX}

#bucket4j:
#  enabled: true
#  filters:
#    - cache-name: rate-limit-buckets
#      url: .*
#      strategy: first
#      rate-limits:
#        - bandwidths:
#          - capacity: 3
#            time: 1
#            unit: minutes
#            fixed-refill-interval: 1
#            fixed-refill-interval-unit: minutes

bucket4j:
  enabled: true
  filters:
  - cache-name: rate-limit-buckets
    filter-method: servlet
    http-response-body: "" # handle the body by other filter
    url: /api/auth/.*
    rate-limits:
      - expression: getRemoteAddr()
        bandwidths:
        - capacity: 15
          time: 1
          unit: minutes